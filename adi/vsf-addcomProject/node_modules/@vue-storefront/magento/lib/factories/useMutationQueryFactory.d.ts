import { Context, FactoryParams } from '@vue-storefront/core';
import { PlatformApi } from '@vue-storefront/core/lib/src/types';
import { UseCustomMutation } from '../types/composables';
import { FetchPolicy } from '../types';
export interface UseCustomMutationFactoryFactoryParams<MUTATION_VARIABLES, MUTATION_RETURN, API extends PlatformApi = any> extends FactoryParams<API> {
    mutation: (context: Context, { variables, fetchPolicy, }: {
        variables: MUTATION_VARIABLES;
        fetchPolicy?: FetchPolicy;
    }) => Promise<MUTATION_RETURN>;
}
export declare const useCustomMutationFactory: <MUTATION, MUTATION_VARIABLES, MUTATION_RETURN = any, API extends PlatformApi = any>(factoryParams: UseCustomMutationFactoryFactoryParams<MUTATION_VARIABLES, MUTATION_RETURN, API>) => (ssrKey?: string) => UseCustomMutation<MUTATION, MUTATION_VARIABLES, MUTATION_RETURN, API>;
//# sourceMappingURL=useMutationQueryFactory.d.ts.map