import { ComposableFunctionArgs, Context, FactoryParams } from '@vue-storefront/core';
import { PlatformApi } from '@vue-storefront/core/lib/src/types';
import { UseReview } from '../types/composables';
export interface UseReviewFactoryParams<REVIEW, REVIEWS_SEARCH_PARAMS, REVIEWS_USER_SEARCH_PARAMS, REVIEW_ADD_PARAMS, REVIEW_METADATA, API extends PlatformApi = any> extends FactoryParams<API> {
    searchReviews: (context: Context, params: ComposableFunctionArgs<REVIEWS_SEARCH_PARAMS>) => Promise<REVIEW>;
    addReview: (context: Context, params: ComposableFunctionArgs<REVIEW_ADD_PARAMS>) => Promise<REVIEW>;
    loadReviewMetadata: (context: Context, params?: ComposableFunctionArgs<{}>) => Promise<REVIEW_METADATA[]>;
    loadCustomerReviews: (context: Context, params: ComposableFunctionArgs<REVIEWS_USER_SEARCH_PARAMS>) => Promise<REVIEW>;
}
export declare function useReviewFactory<REVIEW, REVIEWS_SEARCH_PARAMS, REVIEWS_USER_SEARCH_PARAMS, REVIEW_ADD_PARAMS, REVIEW_METADATA, API extends PlatformApi = any>(factoryParams: UseReviewFactoryParams<REVIEW, REVIEWS_SEARCH_PARAMS, REVIEWS_USER_SEARCH_PARAMS, REVIEW_ADD_PARAMS, REVIEW_METADATA, API>): (id: string) => UseReview<REVIEW, REVIEWS_SEARCH_PARAMS, REVIEWS_USER_SEARCH_PARAMS, REVIEW_ADD_PARAMS, REVIEW_METADATA, API>;
//# sourceMappingURL=useReviewFactory.d.ts.map