import { Context, FactoryParams } from '@vue-storefront/core';
import { ComposableFunctionArgs, PlatformApi } from '@vue-storefront/core/lib/src/types';
import { UseWishlist } from '../types/composables';
export interface UseWishlistFactoryParams<WISHLIST, WISHLIST_ITEM, PRODUCT, API extends PlatformApi = any> extends FactoryParams<API> {
    load: (context: Context, params: ComposableFunctionArgs<{
        searchParams?: Partial<{
            currentPage: number;
            pageSize: number;
        }>;
    }>) => Promise<WISHLIST>;
    loadItemsCount: (context: Context, params: ComposableFunctionArgs<{
        searchParams?: Partial<{
            currentPage: number;
            pageSize: number;
        }>;
    }>) => Promise<WISHLIST>;
    addItem: (context: Context, params: ComposableFunctionArgs<{
        currentWishlist: WISHLIST;
        product: PRODUCT;
    }>) => Promise<WISHLIST>;
    removeItem: (context: Context, params: ComposableFunctionArgs<{
        currentWishlist: WISHLIST;
        product: WISHLIST_ITEM;
    }>) => Promise<WISHLIST>;
    clear: (context: Context, params: {
        currentWishlist: WISHLIST;
    }) => Promise<WISHLIST>;
    isInWishlist: (context: Context, params: {
        currentWishlist: WISHLIST;
        product: PRODUCT;
    }) => boolean;
}
export declare const useWishlistFactory: <WISHLIST, WISHLIST_ITEM, PRODUCT, API extends PlatformApi = any>(factoryParams: UseWishlistFactoryParams<WISHLIST, WISHLIST_ITEM, PRODUCT, API>) => (ssrKey?: string) => UseWishlist<WISHLIST, WISHLIST_ITEM, PRODUCT, API>;
//# sourceMappingURL=useWishlistFactory.d.ts.map