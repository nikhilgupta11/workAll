import { ComposableFunctionArgs, Context, FactoryParams } from '@vue-storefront/core';
import { PlatformApi } from '@vue-storefront/core/lib/src/types';
import { UseContent } from '../types/composables';
export interface UseContentFactoryParams<CONTENT, BLOCK, API extends PlatformApi = any> extends FactoryParams<API> {
    loadContent: (context: Context, params: ComposableFunctionArgs<{
        identifier: string;
    }>) => Promise<CONTENT>;
    loadBlocks: (context: Context, params: ComposableFunctionArgs<{
        identifiers: string[];
    }>) => Promise<BLOCK[]>;
}
export declare function useContentFactory<CONTENT, BLOCK, API extends PlatformApi = any>(factoryParams: UseContentFactoryParams<CONTENT, BLOCK, API>): (ssrKey?: string) => UseContent<CONTENT, BLOCK, API>;
//# sourceMappingURL=useContentFactory.d.ts.map