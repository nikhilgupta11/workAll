import { Context, FactoryParams, ComposableFunctionArgs } from '@vue-storefront/core';
import { PlatformApi } from '@vue-storefront/core/lib/src/types';
import { UseCountrySearch } from '../types/composables';
export interface UseCountryFactoryParams<COUNTRIES, COUNTRY, API extends PlatformApi = any> extends FactoryParams<API> {
    load: (context: Context, params?: ComposableFunctionArgs<{}>) => Promise<COUNTRIES[]>;
    search: (context: Context, params: ComposableFunctionArgs<{
        id: string;
    }>) => Promise<COUNTRY>;
}
export declare function useCountrySearchFactory<COUNTRIES, COUNTRY, API extends PlatformApi = any>(factoryParams: UseCountryFactoryParams<COUNTRIES, COUNTRY, API>): (cacheId?: string) => UseCountrySearch<COUNTRIES, COUNTRY, API>;
//# sourceMappingURL=useCountrySearchFactory.d.ts.map