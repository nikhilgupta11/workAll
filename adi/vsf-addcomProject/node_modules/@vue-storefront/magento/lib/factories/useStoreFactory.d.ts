import { Context, FactoryParams } from '@vue-storefront/core';
import { ComposableFunctionArgs, PlatformApi } from '@vue-storefront/core/lib/src/types';
import { UseStore } from '../types/composables';
export interface UseStoreFactoryParams<STORES, STORE, API extends PlatformApi = any> extends FactoryParams<API> {
    load: (context: Context, params?: ComposableFunctionArgs<{}>) => Promise<STORES>;
    change: (context: Context, params: ComposableFunctionArgs<STORE>) => void;
}
export declare function useStoreFactory<STORES, STORE, API extends PlatformApi = any>(factoryParams: UseStoreFactoryParams<STORES, API>): (cacheId?: string) => UseStore<STORES, STORE, API>;
//# sourceMappingURL=useStoreFactory.d.ts.map