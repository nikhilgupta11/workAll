import { ComposableFunctionArgs, Context, FactoryParams } from '@vue-storefront/core';
import { PlatformApi } from '@vue-storefront/core/lib/src/types';
import { UsePaymentProvider } from '../types/composables';
export interface UsePaymentProviderParams<STATE, PAYMENT_METHOD, API extends PlatformApi = any> extends FactoryParams<API> {
    load: (context: Context, params?: ComposableFunctionArgs<{}>) => Promise<STATE>;
    save: (context: Context, params: ComposableFunctionArgs<{
        paymentMethod: PAYMENT_METHOD;
    }>) => Promise<STATE>;
}
export declare const usePaymentProviderFactory: <STATE, PAYMENT_METHOD, API extends PlatformApi = any>(factoryParams: UsePaymentProviderParams<STATE, PAYMENT_METHOD, API>) => () => UsePaymentProvider<STATE, PAYMENT_METHOD, API>;
//# sourceMappingURL=usePaymentProviderFactory.d.ts.map